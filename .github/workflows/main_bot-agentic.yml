# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure Functions: https://aka.ms/python-webapps-actions

name: Build and deploy Python project to Azure Function App - bot-agentic

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.12'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Optional: Add step to run tests here (pytest, etc.)

      - name: Create deployment package (exclude dev files)
        run: |
          zip -r release.zip . \
            -x "venv/*" \
               ".venv/*" \
               ".git/*" \
               "__pycache__/*" \
               "*.pyc" \
               ".env" \
               "local.settings.json" \
               "*.pdf"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: |
          unzip -o release.zip -d app
          rm release.zip
        
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_EC3B302D2CF14B899DAD01782122E729 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_45942ADCA3014052B164ECB7DB967BE0 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_6F686442926940B2AE483A263037D194 }}

      - name: Ensure AzureWebJobsStorage is configured (create storage if missing)
        shell: bash
        run: |
          set -euo pipefail
          APP_NAME='bot-agentic'
          # Discover resource group and location
          RG=$(az resource list --name "$APP_NAME" --resource-type Microsoft.Web/sites --query "[0].resourceGroup" -o tsv)
          if [ -z "$RG" ]; then
            echo "Could not determine resource group for $APP_NAME" >&2
            exit 1
          fi
          LOC=$(az functionapp show -n "$APP_NAME" -g "$RG" --query location -o tsv)
          # Check if AzureWebJobsStorage already configured
          HAS_WJS=$(az functionapp config appsettings list -g "$RG" -n "$APP_NAME" --query "[?name=='AzureWebJobsStorage'].value | length(@)" -o tsv)
          if [ "$HAS_WJS" != "0" ]; then
            echo "AzureWebJobsStorage already set."
            exit 0
          fi
          # Derive deterministic storage account name (must be 3-24 lower alphanum)
          HASH=$(echo -n "$APP_NAME" | md5sum | cut -c1-12)
          SA="funcsa${HASH}"
          SA=${SA,,}
          # Create storage account if not exists
          if ! az storage account show -n "$SA" -g "$RG" >/dev/null 2>&1; then
            az storage account create -n "$SA" -g "$RG" -l "$LOC" --sku Standard_LRS --kind StorageV2 --allow-blob-public-access false
          fi
          # Get connection string (requires permission to list keys)
          CONN=$(az storage account show-connection-string -n "$SA" -g "$RG" -o tsv --query connectionString)
          if [ -z "$CONN" ]; then
            echo "Failed to get storage connection string for $SA" >&2
            exit 1
          fi
          # Set AzureWebJobsStorage for the function app
          az functionapp config appsettings set -g "$RG" -n "$APP_NAME" --settings AzureWebJobsStorage="$CONN"

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'bot-agentic'
          slot-name: 'Production'
          package: './app'
          